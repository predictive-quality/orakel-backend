"""
Django settings for orakel_backend project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import logging
from pathlib import Path
import os
import json


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", "4d27m5s58&+)(n#!ppn3vp)d18ytea9vd$vvi$ji^(5_l5x-")


BASE_API_URL_PATTER = 'api/v1/'

try:
    with open(os.path.join("keycloak.json"), "r") as f:
        KEYCLOAK = json.load(f)
except:
    KEYCLOAK = {}
    logging.warning("Keycloak config was not loaded. Local development is still possible.")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", None)
if DEBUG in [True, "true", "True"]:
    DEBUG = True
else:
    DEBUG = False
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")


ALLOWED_HOSTS = ['127.0.0.1','qc-api.internal.iop.rwth-aachen.de','172.24.164.222']
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Define Site id when using django.contrib.sites
SITE_ID = 1


# Application definition

INSTALLED_APPS = [
    # Django Apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",

    # Third-Party Apps
    "rest_framework",
    "django_filters",
    "finalware",
    "drf_yasg",
    "corsheaders",
    "django_spaghetti",
    "storages",
    "django_mysql",
    "django_celery_results",
    "django_celery_beat",

    # Local Apps
    'orakel',
    'Users.apps.UsersConfig',
    'Argo.apps.ArgoConfig',
    'Mqtt.apps.MqttConfig'
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'Users.OpenIDBearerAuth.BearerTokenAuthentication',
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        #'rest_framework.permissions.IsAdminUser',
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.NamespaceVersioning",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 100,
    "HTML_SELECT_CUTOFF" : 10,
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend"
    ],  # Only working for the default database
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
        "orakel.renderers.NoFilterBrowsableAPIRenderer",
    ],
}

MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'Users.middleware.OIDCRefreshIDTokenMiddleware',
    'orakel.middleware.MultiDbMiddleware'
]


DATABASE_ROUTERS = ['orakel.router.MultiDbRouter']

ROOT_URLCONF = "orakel_api.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'Users.AuthBackend.AuthBackend',
]



WSGI_APPLICATION = "orakel_api.wsgi.application"

# LOGIN AND SESSION

USE_SESSION_AUTH = True


# Superuser

SITE_SUPERUSER_USERNAME = os.getenv("superuser_username", "root")
SITE_SUPERUSER_EMAIL = os.getenv("superuser_email", None)
SITE_SUPERUSER_PASSWORD = os.getenv("superuser_password", "password")

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("mysql_database", "orakel_backend"),
        "USER": os.getenv("mysql_user", "django_backend_user"),
        "PASSWORD": os.getenv("mysql_password", "django_backend_password"),
        "HOST": os.getenv("HOST_DB", "127.0.0.1"),
        "PORT": "3306",
    },
    "tcg": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("mysql_database", "orakel_backend"),
        "USER": os.getenv("mysql_user", "django_backend_user"),
        "PASSWORD": os.getenv("mysql_password", "django_backend_password"),
        "HOST": os.getenv("TCG_DB", "127.0.0.2"),
        "PORT": "3306",
    },
    "lumileds": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("mysql_database", "orakel_backend"),
        "USER": os.getenv("mysql_user", "django_backend_user"),
        "PASSWORD": os.getenv("mysql_password", "django_backend_password"),
        "HOST": os.getenv("LUMILEDS_DB", "127.0.0.3"),
        "PORT": "3306",
    },
    "ita": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("mysql_database", "orakel_backend"),
        "USER": os.getenv("mysql_user", "django_backend_user"),
        "PASSWORD": os.getenv("mysql_password", "django_backend_password"),
        "HOST": os.getenv("ITA_DB", "127.0.0.4"),
        "PORT": "3306",
    },
    "dw": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("mysql_database", "orakel_backend"),
        "USER": os.getenv("mysql_user", "django_backend_user"),
        "PASSWORD": os.getenv("mysql_password", "django_backend_password"),
        "HOST": os.getenv("DW_DB", "127.0.0.5"),
        "PORT": "3306",
    },
    "kolibri": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("mysql_database", "orakel_backend"),
        "USER": os.getenv("mysql_user", "django_backend_user"),
        "PASSWORD": os.getenv("mysql_password", "django_backend_password"),
        "HOST": os.getenv("KOLIBRI_DB", "127.0.0.6"),
        "PORT": "3306",
    },
}




# Database Connection Time
CONN_MAX_AGE = 600

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/


# Static Files
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")


# Swagger Docs
SWAGGER_SETTINGS = {
    'LOGOUT_URL': "/users/auth/end-session",
}

#Authentication user model
AUTH_USER_MODEL = 'Users.User'

# Allow Cors
CORS_ALLOW_ALL_ORIGINS = True

from corsheaders.defaults import default_headers

CORS_ALLOW_HEADERS = list(default_headers) + [
    "x-csrf-token",
]

CSRF_TRUSTED_ORIGINS = [
    "*.iop.rwth-aachen.de",
    "localhost",
    '172.24.164.222'
]

SPAGHETTI_SAUCE = {
    "apps": ["orakel"],
    "show_fields": False,
    "exclude": {"orakel": ["event"]},
}

# Celery Configuration


CELERY_BROKER_URL = os.environ.get("CELERY_BROKER_URL", "amqp://localhost")
CELERY_RESULT_BACKEND = "django-db"
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"

FLOWER_URL = os.environ.get("FLOWER_URL", "http://localhost:5555/")

from job_scheduler.periodic_task import periodic_tasks

CELERY_BEAT_SCHEDULE = periodic_tasks